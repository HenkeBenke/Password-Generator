/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainpasswordgenerator;


/**
 *
 * @author aa97339
 */
public class BasicGUI extends javax.swing.JFrame {

    /**
     * Creates new form BasicGUI
     */
    public BasicGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lengthPicker = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        forenameField = new javax.swing.JTextField();
        questionLbl = new javax.swing.JLabel();
        variedEncryptionCheckBox = new javax.swing.JCheckBox();
        qwertyCheck = new javax.swing.JCheckBox();
        submitAnswerButt = new javax.swing.JButton();
        showPassword = new javax.swing.JButton();
        flexibleLengthCheckBox = new javax.swing.JCheckBox();
        minLengthSlider = new javax.swing.JSlider();
        maxLengthSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        choosePasswordCombo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaShowPassword = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lengthPicker.setMaximum(20);
        lengthPicker.setMinimum(3);
        lengthPicker.setPaintLabels(true);
        lengthPicker.setPaintTicks(true);
        lengthPicker.setSnapToTicks(true);
        lengthPicker.setValue(10);

        jLabel1.setText("Length:");

        submit.setLabel("Ok");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        questionLbl.setText("Fore name");

        variedEncryptionCheckBox.setText("Vary encryption methods");
        variedEncryptionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variedEncryptionCheckBoxActionPerformed(evt);
            }
        });

        qwertyCheck.setSelected(true);
        qwertyCheck.setText("QWERTY layout keyboard");

        submitAnswerButt.setText("Ok");
        submitAnswerButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitAnswerButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(forenameField)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lengthPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(submit)
                            .addComponent(variedEncryptionCheckBox)
                            .addComponent(qwertyCheck)
                            .addComponent(questionLbl)
                            .addComponent(submitAnswerButt))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(lengthPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(variedEncryptionCheckBox)
                .addGap(18, 18, 18)
                .addComponent(qwertyCheck)
                .addGap(18, 18, 18)
                .addComponent(submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(questionLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(forenameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitAnswerButt)
                .addContainerGap())
        );

        showPassword.setText("Print password");
        showPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordActionPerformed(evt);
            }
        });

        flexibleLengthCheckBox.setText("Flexible length");
        flexibleLengthCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flexibleLengthCheckBoxActionPerformed(evt);
            }
        });

        minLengthSlider.setMajorTickSpacing(5);
        minLengthSlider.setMaximum(30);
        minLengthSlider.setMinimum(5);
        minLengthSlider.setMinorTickSpacing(1);
        minLengthSlider.setPaintLabels(true);
        minLengthSlider.setPaintTicks(true);
        minLengthSlider.setValue(5);
        minLengthSlider.setEnabled(false);
        minLengthSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                minLengthSliderMouseReleased(evt);
            }
        });

        maxLengthSlider.setMajorTickSpacing(5);
        maxLengthSlider.setMaximum(30);
        maxLengthSlider.setMinimum(5);
        maxLengthSlider.setMinorTickSpacing(1);
        maxLengthSlider.setPaintLabels(true);
        maxLengthSlider.setPaintTicks(true);
        maxLengthSlider.setEnabled(false);
        maxLengthSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                maxLengthSliderMouseReleased(evt);
            }
        });

        jLabel4.setText("Max");

        jLabel3.setText("Min");

        choosePasswordCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosePasswordComboActionPerformed(evt);
            }
        });

        textAreaShowPassword.setEditable(false);
        textAreaShowPassword.setColumns(20);
        textAreaShowPassword.setRows(5);
        textAreaShowPassword.setText("Passwords can be displayed here");
        textAreaShowPassword.setToolTipText("");
        jScrollPane1.setViewportView(textAreaShowPassword);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(showPassword)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(choosePasswordCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(maxLengthSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(flexibleLengthCheckBox)
                    .addComponent(minLengthSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(flexibleLengthCheckBox)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(minLengthSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(maxLengthSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(showPassword)
                                    .addComponent(choosePasswordCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        if (lengthPicker.isEnabled()) {
            Password pass = new Password(lengthPicker.getValue());
            MainPasswordGenerator.listOfPasswords.add(MainPasswordGenerator.listOfPasswords.size(), pass);
        }
        else {
            Password pass = new Password(minLengthSlider.getValue(), maxLengthSlider.getValue());
            MainPasswordGenerator.listOfPasswords.add(MainPasswordGenerator.listOfPasswords.size(), pass);
        }
        UserInput usIn = new UserInput(qwertyCheck.isSelected(), variedEncryptionCheckBox.isSelected());
        MainPasswordGenerator.listOfInputs.add(MainPasswordGenerator.listOfInputs.size(), usIn);
        submit.setEnabled(false);
        MainPasswordGenerator.encrypt.methodPicker(usIn, MainPasswordGenerator.listOfPasswords.get(MainPasswordGenerator.listOfPasswords.size()-1), questionLbl);
    }//GEN-LAST:event_submitActionPerformed

    private void showPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordActionPerformed
        for (int i = 0; i < MainPasswordGenerator.listOfPasswords.size(); i++) { //Remove later
            System.out.println(MainPasswordGenerator.listOfPasswords.get(i).passwordText);
        }
        int passNr = choosePasswordCombo.getSelectedIndex();
        Password pass = MainPasswordGenerator.listOfPasswords.get(passNr);
        textAreaShowPassword.setText("The password is: " + pass.getPasswordText() + "\nwith the following being the memory methods:\n");
        for (int i = 0; i < pass.getAmountOfMemoryMethods(); i++) {
            textAreaShowPassword.append(pass.getMemoryMethod(i)+"\n");
        }
    }//GEN-LAST:event_showPasswordActionPerformed

    private void variedEncryptionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variedEncryptionCheckBoxActionPerformed

    }//GEN-LAST:event_variedEncryptionCheckBoxActionPerformed
                                                                                //Make it so only one type of length picking is enabled at a time
    private void flexibleLengthCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flexibleLengthCheckBoxActionPerformed
        if (flexibleLengthCheckBox.isSelected()) {
            lengthPicker.setEnabled(false);
            minLengthSlider.setEnabled(true);
            maxLengthSlider.setEnabled(true);
        }
        else {
            lengthPicker.setEnabled(true);
            minLengthSlider.setEnabled(false);
            maxLengthSlider.setEnabled(false);
        }
    }//GEN-LAST:event_flexibleLengthCheckBoxActionPerformed

    private void minLengthSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minLengthSliderMouseReleased
        maxLengthSlider.setMinimum(minLengthSlider.getValue());
    }//GEN-LAST:event_minLengthSliderMouseReleased

    private void maxLengthSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxLengthSliderMouseReleased
        minLengthSlider.setMaximum(maxLengthSlider.getValue());
    }//GEN-LAST:event_maxLengthSliderMouseReleased

    private void choosePasswordComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosePasswordComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choosePasswordComboActionPerformed

    private void submitAnswerButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitAnswerButtActionPerformed
        if (forenameField.getText().length()==0) {  //Make changes later
            System.out.println("Inget förnamn");
            return;
        }
        else if (false) { //Add code for encrypt again compatability
            
        }
        UserInput usIn = MainPasswordGenerator.listOfInputs.get(MainPasswordGenerator.listOfInputs.size()-1);
        usIn.setFirstText(forenameField.getText());
        MainPasswordGenerator.encrypt.makePassword(usIn, MainPasswordGenerator.listOfPasswords.get(MainPasswordGenerator.listOfPasswords.size()-1));
        choosePasswordCombo.addItem(MainPasswordGenerator.listOfPasswords.get(MainPasswordGenerator.listOfPasswords.size()-1).getPasswordText());
        submit.setEnabled(true);
    }//GEN-LAST:event_submitAnswerButtActionPerformed

    
    /**
     * @param args the command line arguments
     */
   // public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
     /*   try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BasicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BasicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BasicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BasicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
       // java.awt.EventQueue.invokeLater(new Runnable() {
            //public void run() {
          //      new BasicGUI().setVisible(true);
        //    }
      //  });
  //  }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox choosePasswordCombo;
    private javax.swing.JCheckBox flexibleLengthCheckBox;
    private javax.swing.JTextField forenameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider lengthPicker;
    private javax.swing.JSlider maxLengthSlider;
    private javax.swing.JSlider minLengthSlider;
    private javax.swing.JLabel questionLbl;
    private javax.swing.JCheckBox qwertyCheck;
    private javax.swing.JButton showPassword;
    private javax.swing.JButton submit;
    private javax.swing.JButton submitAnswerButt;
    private javax.swing.JTextArea textAreaShowPassword;
    private javax.swing.JCheckBox variedEncryptionCheckBox;
    // End of variables declaration//GEN-END:variables
   }
